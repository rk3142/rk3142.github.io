# Site
repository: rk3142/rk3142.github.io
favicon: images/favicon.ico

# Content configuration version
version: 2

# Personal info
name: Rishav Kumar
title: Computer Science Enthusiast
email: rk3142@columbia.edu
website: https://rk3142.github.io/

# Dark Mode (true/false/never)
darkmode: false

# Social links
github_username:  rk3142
# stackoverflow_username: "00000001"
# dribbble_username: jekyll
# facebook_username: jekyll
# flickr_username: jekyll
linkedin_username: rishav-kumar-1604
# xing_username: jekyll
# pinterest_username: jekyll
# googleplus_username: +jekyll
# orcid_username: 0000-0000-0000-0000

# About Section
# about_title: About Me
about_profile_image: images/profile.jpg
about_content: | # this will include new lines to allow paragraphs
  Hi, my name's Rishav Kumar and I'm a final year Computer Science Graduate Student at Columbia University in the City of New York. I completed my undergraduate degree from Manipal Institute of Technology, India in Electronics and Communication. I have over 4 years of experience as <mark> Back-end Developer</mark> at Comviva Technologies. I have worked on several projects and have interacted with multiple teams, learning from their experience and implementing them on the projects that I worked on. I have also led members of my team in different capacities like acting as a point of contact with the stakeholder and collaborating with clients .

  I am most skilled in: <mark>Python</mark> and <mark>Ruby</mark>. I have experience in NoSQL databases like: <mark>Redis</mark>, <mark>MongoDB</mark>, <mark>Neo4j</mark> and Relational Databases like <mark>MySQL</mark> and <mark> Oracle </mark>. I have worked on cloud platforms like: <mark>AWS</mark> and <mark> GCP</mark>. I have experience in version control systems like: <mark>Git</mark> and creating CI/CD pipelines using <mark> Github Actions and Cicle CI</mark>.

content:
  - title: Education # Title for the section
    layout: list # Type of content section (list/text)
    content:
      - layout: left
        title: Columbia University
        caption: 2021 - 2022
        sub_title: MS in Computer Science
        quote: >
          Columbia University is a private Ivy League research university in New York City. Established in 1754 as King's College on the grounds of Trinity Church in Manhattan, Columbia is the oldest institution of higher education in New York and the fifth-oldest institution of higher learning in the United States.
        description: | # this will include new lines to allow paragraphs
          During my time at Columbia, what I learnt the most is "never give up". Having a formal education in Computer Science had been my goal for nearly 7 years. I took subjects like <mark>Operating System</mark>, <mark>Analysis of Algorithms</mark>, <mark>Advanced Algorithms</mark>, <mark>Database Management System</mark>, <mark>Adavanced Software Engineering</mark>, <mark>Artificial Intelligence</mark>, <mark>Advanced Database Systems</mark>, <mark>Cloud Computing</mark>, <mark> Programming Language and Translators.</mark>
  

  
  - title: Experience # Title for the section
    layout: list # Type of content section (list/text)
    content:
      - layout: left
        title: Comviva
        link: comviva.com
        # link_text: boringcompany.com
        sub_title: Senior Software Developer
        caption: August 2016 - October 2020
        quote: >
          Customer centricity, innovation and ethical corporate governance are at our core. We strive to solve our customersâ€™ real, on-ground challenges and help them transform their lives to create a better world.
        description: | # this will include new lines to allow paragraphs
            I joined Comviva as a Software developer in 2016 with little to no knowledge in software development. All I had was my problem solving skills and never give up attitude. Started off with developing APIs doing simple CRUD operations and soon launched into the big league of developing Subscription Engine and Content Downloads. After working on a couple of applications, I moved to live streaming domain.  Created a live movie channel whose scheduled can be updated on the fly and can have features like ad-insertion as well as relaying feed from other channels.

            After being promoted as Senior Developer, I was showered with the opportunity to lead back-end development on a music application. Apart from developing its APIs, I also contributed to its system design considering it's highly available and scalable infrastructure. 
  
  - title: Publications # Title for the section
    layout: list # Type of content section (list/text)
    content:
      - layout: top-middle
        title: Classification of Benign and Malignant Tumors using Support Vector Machine
        caption: 2016
        link: https://ieeexplore.ieee.org/document/7807941
        description: | # this will include new lines to allow paragraphs
          This work presents a Computer Aided Diagnosis (CAD) system that helps radiologists in differentiating malignant and benign bone lesions in the spine on Computed Tomography (CT) images using Support Vector Machines(SVM). The CT images are segmented using Snakes or Active Contour Model to retrieve the Region of Interest(ROI). From the segmented images, Haralick features are calculated. These features are then passed to the SVM classifier. With the help of SVM model generated, the data are classified into benign and malignant nodules. The performances of different kernel functions are compared.
  
  - title: Projects # Title for the section
    layout: list # Type of content section (list/text)
    content:
      - layout: top-middle
        title: Live Football Matches Streaming
        # link_text: Project Website
        
        description: | # this will include new lines to allow paragraphs
          I worked on the streaming architecture using <mark> Wowza Streaming Engine </mark> and developed modules that validated the authenticity of the source initiating the streaming request and then provided the content for streaming. <mark> The product had the capacity to support more than 100k concurrent streaming sessions </mark>.
            
      - layout: top-middle
        title: Subscription Report Analytics
        # link_text: Project Website          
        description: | # this will include new lines to allow paragraphs
          This is my pet project. More importantly, this was entirely different from developing APIs. It was to design an architecture, a system through which an end-user can fetch data efficiently and with low latency. I had full liberty of choosing technologies and I chose to move away from my comfort zone to challenges. I read and failed and tried again to come up with a scalable architecture. I worked on different types of data sources like MySQL, Postgres, and Oracle and had an in-memory middle layer data storage that I needed for combining tables. Fun Fact, when I joined Grad School later, I came to know that this is Star Schema which came to me as an intuition at that time.
          
          Technologies Used: <mark>Python, Pandas, MySQL</mark>
      
      - layout: top-middle
        title: Celebrity Interaction
        # link_text: Project Website
        quote: >
          Allows fans to follow their celebrities and view their contents
        description: | # this will include new lines to allow paragraphs
          I worked on the Content Ingestion Module where contents like image and videos were uploaded by the end-user. The contents are then transcoded into different resolutions, thumbnails are extracted from the videos, and then uploaded into S3 storage. Another module that I worked on was Notification module that notified users when their favorite celebrities came online for live events. I also revamped the New Feeds module to improve its performance.
          
          Technologies Used: <mark> Ruby on Rails, FFMPEG, Redis, Apache Solr, RabbitMQ, Sneakers, Amazon S3, Wowza, MySQL. </mark>

      - layout: top-middle
        title: Music Application
        # link_text: Project Website
        
        description: | # this will include new lines to allow paragraphs
          The application had features like otp login, user-specific dashboard contents, playlists curated by the administrator as well as user-curated playlists. I delivered modules like login/signup, content rendering, favorite an artist, album, playlist, or song, adaptive streaming of video and audio contents, encryption of streaming content, and creating a custom playlist. I also implemented solutions that would generate streaming reports, daily usage statistics of the application, and revenue generated by the product. The product was highly available and scalable operating over multiple data centers. Also implemented Sentinels in Redis to maintain highly available Redis Caching.
          
          Technologies Used: <mark> Ruby on Rails, MySQL, Apache Solr, Redis, Redis Sentinels, Wowza Streaming Engine, Beanstalkd. </mark>

      - layout: top-middle
        title: Group Watching Application
        # link_text: Project Website
        
        description: | # this will include new lines to allow paragraphs
          This project allows users in different regions to view content together. There is one controller who initiates the streaming while other users join the room. The controller can then pass control to his fellow mates. I developed APIs that would create chat rooms and interact with the chat server to get the current list of participants. 

          Technologies Used: <mark> Spring Boot, Openfire, Eureka </mark> 

      - layout: top-middle
        title: Interactive Kids Application
        # link_text: Project Website
        
        description: | # this will include new lines to allow paragraphs
          This was my first project as a software developer. The application had contents like pictures, poems, games and videos segregated into different age groups. I worked on the backend of this application written in Ruby on Rails. I worked on login, favorite, content streaming, content download and subscription engine of the product. I also did unit testing, load testing of the product.

      - layout: top-middle
        title: Fern - Feeling Blue Go Green
        link: github.com/rk3142/fern-production
        # link_text: Project Website
        quote: >
          Let's take small steps in protecting our environment while purchasing online
        description: | # this will include new lines to allow paragraphs
          My and fellow mates developed this project for a Graduate level course ESaaS at Columbia University.
          The project allows users to make an informed decision while purchasing products online. The consumers can select the product on the basis of the greenness score and they can then be re-directed to the respective e-commerce site.

          The backend of this product is developed on Ruby on Rails and the Front-end is developed on React. A complete CI/CD pipeline was developed on Heroku.

          I am very proud of having this project in my portfolio.
      - layout: top-middle
        title: Form-Hoster
        link: https://github.com/rk3142/marc1
        # link_text: Project Website
        quote: >
          Say Hello to your world of creating custom forms
        description: | # this will include new lines to allow paragraphs
          This is a project which I and my fellow mates developed for a Graduate level course Advanced Software Engineering at Columbia University.

          This is a Backend as a Service where you can provide us with your custom form template. Once the form template is registered, you can provide those templates to the end-user and use our APIs to save the data. We maintain a separate namespace for every template.

          So you see!! You donâ€™t need to know any back-end language now to store the data of your users. We are here to help.
         
  - title: A Little More About Me
    layout: text
    content: | # this will include new lines to allow paragraphs
      Alongside my interests in software engineering some of my other interests and hobbies are:
      - Gaming
      - Play with dogs in the park
      - Singing
      - Playing Piano (Actually I am at level 0. Tada :D)

# Footer
footer_show_references: true
# references_title: References on request (Override references text)

# Build settings
remote_theme: sproogen/resume-theme

sass:
  sass_dir: _sass
  style: compressed

plugins:
 - jekyll-seo-tag
